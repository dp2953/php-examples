<?php

namespace spec;

use PhpSpec\ObjectBehavior;
use Prophecy\Argument;

/**
 *
 * Highly divisible triangular number
 *
 * Problem 12
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 * 
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 */
class HighlyDivisibleTriangularNumberSpec extends ObjectBehavior
{
    function it_finds_first_triangle_number_with_over_1_divisor()
    {
        $this->find(1)->shouldReturn(3);
    }
    
    function it_finds_first_triangle_number_with_over_2_divisors()
    {
        $this->find(2)->shouldReturn(6);
    }

    function it_finds_first_triangle_number_with_over_3_divisors()
    {
        $this->find(3)->shouldReturn(6);
    }
    
    function it_finds_first_triangle_number_with_over_4_divisors()
    {
        $this->find(4)->shouldReturn(28);
    }
    
    function it_finds_first_triangle_number_with_over_5_divisors()
    {
        $this->find(5)->shouldReturn(28);
    }
    
    function it_finds_first_triangle_number_with_over_500_divisors()
    {
        $this->find(500)->shouldReturn(76576500);
    }
}
