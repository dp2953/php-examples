<?php

/**
 *
 * Highly divisible triangular number
 *
 * Problem 12
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 * 
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 */
class HighlyDivisibleTriangularNumber
{

    /**
     * Find the value of the first triangle number to have over five hundred divisors
     *
     * @param int $thresh_hold_divisors Number of devidors that we have to top
     * @return int
     */
    public function find($thresh_hold_divisors)
    {
        $last_number = 1;
        
        for ($count = 2; $this->count_devisors($last_number) <= $thresh_hold_divisors; $count++) {
            $last_number += $count;
        }
        
        return $last_number;
    }
    
    /**
     * Find number of devidors a number has
     *
     * @param int $number Nuber to count devidors for
     * @return int Number of devidors
     */
    private function count_devisors($number) {
        if ( $number == 1) {
            return 1;
        }
        
        $devisors = 2;

        for ($i = 2; $i <= sqrt($number); $i++) {
            if ($number % $i == 0) {
                $devisors += 2;
            }
        }
        
        return $devisors;
    }
}
